{
  "name": "seedrand",
  "version": "0.1.0",
  "description": "Use Math.seed() to get test your Math.random()-based functions.",
  "main": "src/seedrand.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bfontaine/seedrand.js.git"
  },
  "keywords": [
    "random"
  ],
  "author": {
    "name": "Baptiste Fontaine"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "readme": "# seedrand.js\n\n`seedrand.js` is a micro library which allows you to seed `Math.random()`. It’s\nmainly written for testing functions that require random numbers.\n\n## Usage\n\nThe library can be included server- and/or client-side. It moves the original\n`Math.random` to `Math._random`, and use a custom pseudo-random number generator\n(PRNG) to replace it.\n\n## Client-side\n\n```html\n<script src=\"/path/to/seedrand.min.js\"></script>\n<script>\nvar mySeed = +new Date(),\n    a, b;\n\nMath.seed( mySeed );\na = Math.random();\n\nMath.seed( mySeed );\nb = Math.random();\n\nconsole.log( a === b ); // true\n</script>\n```\n\n## NodeJS\n\n```js\nrequire( 'seedrand' );\n\nvar mySeed = +new Date(),\n    a, b;\n\nMath.seed( mySeed );\na = Math.random();\n\nMath.seed( mySeed );\nb = Math.random();\n\nconsole.log( a === b ); // true\n```\n\n# Install\n\nOn the client-side, include the `seedrand.min.js` file in your page. On the\nserver-side, install the `seedrand` npm package:\n\n```\n[sudo] npm -g install seedrand\n```\n\n# Acknowledgments\n\nThe code of the PRNG is based on [Adam Hyland][adam-twitter]’s\n[implementation][invwk] of “Webkit2’s crazy invertible mapping generator”.\n\n\n[adam-twitter]: https://twitter.com/therealprotonk\n[invwk]: https://gist.github.com/Protonk/5367430#file-prng-js-L91\n",
  "readmeFilename": "README.md",
  "_id": "seedrand@0.1.0",
  "_from": "seedrand@~0.1.0"
}
